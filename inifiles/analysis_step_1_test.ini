#Sample file for parameters for the DMBayes package
#This file for version Nov 2014 version.

#Root name for files produced - use the full path
file_root =  chains/analysis_step_1_test
#Output name if postprocessing
#out_root  = chains/test2_n0_freeBF_withBG_xsecPrior_profl/test2_n0_freeBF_withBG_xsecPrior_profl_pp

#Set to T if this is a restart from a previous run, and new points will be appended to old files.
restart_and_continue = F

#Choose the sampler to use.
#action = 0 => MCMC
#action = 1 => post-process
#action = 4 => a fixed grid in param space
#action = 5 => nested sampling
#action = 6 => differential evolution
action = 5

#Feedback level (>2: debug   1: minimal   0: almost none)
feedback = 5

#What to compute.  Only one option ;)
compute_Indirect_Detection = T

#What ID observables to compute
compute_ID_GC_region = T
compute_ID_gadiff = F
compute_ID_gacont = F
#compute_ID_efluxes = F    #In the PP mode, one can compute the fluxes spectrum for each sample

#If you want to compute the like from Nuisance (SM) params
Use_Nuisance = F
#Increase to oversample nuisance parameters
oversample_nuisance = 1

#Choose whether to include gamma-ray data in the fit or not.
Use_Gamma = T


##################################################
# Indirect detection  parameters
##################################################

#Number of halo profiles to compute for
num_hm = 1

#Available halo models are: isothermal (isosm), modified isothermal (isocl),
#Navarro-Frenk-White (nfwsm), Moore (moosm), Burket (burksm),
#adiabatic contracted (adiabsm), Navarro-Frenk-White adiab. (nfwadiabsm),
#Moore adiab. (mooadiabsm)
#enumerate the ones desired
model1 = nfwsm
model2 = isosm
model3 = moosm
model4 = mooadiabsm
model5 = nfwadiabsm

#For the fluxes of gamma-rays and neutrinos with the chosen halo
#profile, we calculate, once and for all, the line of sight
#integration factor j in the direction of observation, which we
#define as the direction which forms an angle psi0 with respect to
#the direction of the galactic centre (e.g. cospsi0 = 1 is the
#galactic center direction, cospsi0 = -1 the antigalactic centre)
cospsi0 = 1.d0
#There are two options: you can take into account that your
#detector has an angular resolution delta_gamma (in sr) and compute
#j averaged over that solid angle or set  delta_gamma = 0 and just
#compute j without averaging
delta_gamma = 1.d-3
#Gamma-ray flux with continuum energy spectrum integrated above
#some given threshold egath (GeV) (ie HESS = 60.d0)
egath = 1.d0
#ei: is the initial energy (GeV), ef: is the final one (GeV)and
#nbins: is the number of bins required. Notice that the step is
#defined in a log scale
ei = 0.1d0
ef = 500.d0
nbins = 50

##################################################
# Fermi indirect detection parameters
##################################################

#Choose which files to use for calculating the GC gamma-ray likelihood.
#Location of Fermi GC data files.
Fermi_rootfile = fermi_sim_data/gc_test2_n1
#Location of index file for background model database.
Fermi_indexfile = bg_data/TestGridI/index_TestGridI.txt
#Location of file with parameters of PS to be kept fixed.
Fermi_fixed_PSfile = Follow_up/Followup_46PS_fixed.txt
#Location of file with parameters of PS to be improved in analysis_step 3.
Fermi_fitme_PSfile = Follow_up/Followup_46PS.txt
#Location of file with parameters of PS to be kept fixed in next run (produced at end of analysis_step 3).
Fermi_output_PSfile = Follow_up/Followup_46PS_fixed_new.txt

#Choose which gamma-ray data to use for the Galactic Centre
#1: real Fermi data
#2: synthetic data                        (see fermi_ini.f90)
#3: synthetic data with realisation noise (see fermi_ini.f90)
use_data = 1

#If the data are Fermi simulated or just by hand
Use_Fermi_Simulated = T #Alex: Use_Fermi_Simulated hardcoded to be FALSE no matter what you put here (maybe used in driver_chord)
#Only works for simulated PS
#Fermi_fitme_PSfile = Follow_up/Test_10PS.txt
Fermi_fitme_PSfile = ptsrc_data/gll_psc_v07.fit

#Include BG
Fermi_include_BG = F #Alex: Fermi_include_BG hardcoded to be TRUE no matter what you put here

#Which step of the GC analysis to carry out
1. (UFS1)   Background (3D) and point source fit (3D).  High energy bins only.  MultiNest scan, 6D.
2. (UFS2)   Background (3D) for null evidence.  High energy bins only.  MultiNest scan, 3D.
3. (UFS3)   Background (11D) and point source fit (7D + discrete PS index).  High and low E bins.  Diver scan, 19D.
4. (UFS5.1) Background (3D) and point source fit (3D).  High and low energy bins.  MultiNest scan, 6D.
5. (UFS5.2) Background (3D) for null evidence.  High and low energy bins.  MultiNest scan, 3D.
6. (UFS6)   Local evidence for individual PS (how?)
7. (UFS7)   Background (11D) and dark matter fit (15D).  High and low E bins.  Diver scan, 26D.
# 3D BG => the only varying BG parameters should be T_S, X_CO_1, norm_p
# 3D PS => the only varying PS parameters should be l, b, log(N0)
analysis_step = 1

# Instrument response function version
IRF_version = 'P6_v3_diff'
# Boost factor for the Galactic centre as observed with Fermi
GCBF = 0.d0
# Use Poissonian likelihood instead of chi-square
GCPoissonian = T
# Side length in pixels of outer square to convolve with IRF for the GC
GC_outerPix = 60
# Side length in pixels of inner square to include in likelihood for the GC
GC_corePix = 60


##################################################
# MCMC parameters (relevant if action = 0)
##################################################

#Number of distinct points to sample per chain
#Every accepted point is included
samples = 30000

#number of samples not to save at the beginning
#You might want to leave it at 0 and take them out later
burn_in = 0

#MCMC temperature
temperature = 1

#if blank this is set from system clock
rand_seed = 12345

#Use covariance matrix from previous run for proposal density
#needs to have the correct number of parameters
propose_matrix =


#####################################################
# Post-processing parameters (relevant if action = 1)
#####################################################

#Do you want to recompute the likelihood and weights?
redo_like = T
#Do you want to recompute the likelihood only (not weights)?
redo_change_like_only = F
#Do you want to recompute the theory, likelihood and weights? In this case, the compute_xxx quantities determine what will be saved.
#If redo_theory = F, then the compute_xxx quantities MUST match the original chain or you will be in trouble.
redo_theory = T

#lines to skip in the chains (burnin)
skip_lines = 0

#When postprocessing it might be useful to put an offset to the loglike
#if there is a large change to it with new data to get sensible weights
redo_likeoffset =  0


##################################################
# Nested sampling  parameters (relevant if action = 5)
##################################################

#multiple modes expected?
multimodal = T

#max no. of modes expected (for memory allocation)
maxmodes = 200

#no. of parameters for mode separation, relevant only if multimodal = T
nCdims = 2

#max no. of live points
nlive = 20000

#evidence tolerance factor, defines the stopping condition
tol = 0.1

#sampling efficiency
eff = 0.3


##################################################
# Differential evolution parameters (relevant if action = 6)
##################################################

#Number of civilisations
#(number of times to re-run diver over again from the start)
maxciv = 10

#Maximum number of generations in any given civilisation
maxgen = 300

#Population size
NP = 300

#Boundary constraint: 1 -> brick wall, 2 -> random re-initialization, 3 -> reflection
bndry = 3

#Tolerance for generation-level convergence -- based on smoothed fractional improvement in mean like
gen_tol = 1d-3

#Number of generations over which to smooth fraction mean like improvement for gen_tol
gen_tol_smooth_len = 10

#remove duplicate individuals
removeDuplicates = .true.

#use jDE
jDE = .true.

#jDE flag for lambda update
lambdajDE = .true.

#crossover factor (ignored if jDE = T)
Cr = 0.9

#mixing factor between best and rand/current (ignored if jDE = T)
lambda = 0.

#use current vector for mutation (ignored if jDE = T)
current = .false.

#use exponential crossover (ignored if jDE = T)
expon = .false.

#do things required to calculate posterior weights and evidence
doBayesian = .false.

#maximum population in a node of the BSP tree if doBayesian = T (ignored otherwise) (the smaller, the more accurate the posterior)
maxNodePop = 1.9

#evidence tolerance factor, defines the stopping condition if doBayesian = T
Ztol = 0.1


##################################################
# Prior ranges for parameters
##################################################

#syntax for MCMC (action = 1):
#paramx start_central_val, min_val, max_val, start_width, propose_width
#assumes flat priors on these parameters
#If start width < 0 use only positive gaussian variations from center

#syntax for grid mode (action = 4):
#paramx ignored, min_val, max_val, ignored, grid_step

#syntax for nested sampling (action = 5):
#paramx ignored, min_val, max_val, ignored, ignored

#whether you want log in the neutralino mass (and prior flat on the corresponding variable)
use_log_mass = F

#log_10(mchi) (GeV)
#param1 = 3.0 1.7 3.6 0.2 .5

#mchi (GeV) - linear scale
param1 = 175 175 175 2 2

#Whether you want to use the branching fractions and total annihilation cross-section,
#or the individual cross-sections into different final states as the parameters in the scan
use_BRs = F

#whether you want log in the BRs / cross-sections for each annihlation channel.
#When use_BRs=T, then
#  if use_log_channels = T, then prior is flat in the log of the BRs, BR(tautau) set from sum_i BR_i = 1 condition
#  if use_log_channels = F, then prior flat on the angles of the hypersphere.
#When use_BRs=F, then
#  if use_log_channels = T, then prior is flat in the log of the cross-sections
#  if use_log_channels = F, then prior is flat in the cross-sections themselves
use_log_channels = T

#----- begin section to be used when use_BRs = T -- comment this out if use_BRs = F

#log10[<sigma v> / (10^27 cm^3 s^-1)]
#param2 = 2 1.9 2.1 0.1 0.1

#br_cc - log scale
#param3 =  -10 -10 0 0 0

#br_bbar - log scale
#param4 = -10 -10 -10 0 0

#br_ttbar - log scale
#param5 =  -10 -10 -10 0 0

#br_ww - log scale
#param6 =  -10 -10 -10 0 0

#br_zz - log scale
#param7 =   -10 -10 -10 0 0

#br_zgam - log scale
#param8 =   -10 -10 -10 0 0

#br_gamgam - log scale
#param9 =  -10 -10 -10 0 0

#br_gg - log scale
#param10 =  -10 -10 -10 0 0

#br_ee - log scale
#param11 =   -10 -10 0 0 0

#br_mumu - log scale
#param12 =   -10 -10 0 0 0

#----- end section to be used when use_BRs = T

#----- begin section to be used when use_BRs = T, use_log_channels = F (this is of course a spectacularly crap prior, but you are free to use it)
#CS - look into ranges (BF_test.ini)

#log10[<sigma v>_tautau / (10^27 cm^3 s^-1)]
#param2 = 0 -2.0 3.5 0.1 0.1
param2 = -9.0 -9.0 -9.0 0.1 0.1

#log10[<sigma v>_cc / (10^27 cm^3 s^-1)]
#param3 = 0 -2.0 3.5 0.1 0.1
param3 = -9.0 -9.0 -9.0 0.1 0.1

#log10[<sigma v>_bbbar / (10^27 cm^3 s^-1)]
#param4 = 0 -2.0 3.5 0.1 0.1
param4 = -9.0 -9.0 -9.0 0.1 0.1

#log10[<sigma v>_ttbar / (10^27 cm^3 s^-1)]
#param5 = 0 -2.0 3.5 0.1 0.1
param5 = -9.0 -9.0 -9.0 0.1 0.1

#log10[<sigma v>_ww / (10^27 cm^3 s^-1)]
#param6 = 0 -2.0 3.5 0.1 0.1
param6 = -9.0 -9.0 -9.0 0.1 0.1

#log10[<sigma v>_zz / (10^27 cm^3 s^-1)]
#param7 = 0 -2.0 3.5 0.1 0.1
param7 = -9.0 -9.0 -9.0 0.1 0.1

#log10[<sigma v>_zgam / (10^27 cm^3 s^-1)]
#param8 = 0 -2.0 3.5 0.1 0.1
param8 = -9.0 -9.0 -9.0 0.1 0.1

#log10[<sigma v>_gamgam / (10^27 cm^3 s^-1)]
#param9 = 0 -2.0 3.5 0.1 0.1
param9 = -9.0 -9.0 -9.0 0.1 0.1

#log10[<sigma v>_gg / (10^27 cm^3 s^-1)]
#param10 = 0 -2.0 3.5 0.1 0.1
param10 = -9.0 -9.0 -9.0 0.1 0.1

#log10[<sigma v>_ee / (10^27 cm^3 s^-1)]
param11 = -9.0 -9.0 -9.0 0.1 0.1

#log10[<sigma v>_mumu / (10^27 cm^3 s^-1)]
param12 = -9.0 -9.0 -9.0 0.1 0.1

#----- end section to be used when use_BRs = F

#alpha
param13 = 1.0 1.0 1.0 0 0

#beta
param14 = 3.0 3.0 3.0 0 0

#gamma
param15 = 1.0 1.0 1.0 0 0

#rho_0 (GeV cm^-3)
param16 = 0.3 0.3 0.3 0 0

#nuisance

#A_0 (Mev/cm^2/s)
param17 = 0 0 0 0 0

#E_0 (MeV)
param18 = 0 0 0 0 0

#\delta_1
param19 = 0 0 0 0 0

#\delta_2
param20 = 0 0 0 0 0

#mtop (GeV)
param21 = 172.6 172.6 172.6 0 0

#Background parameters

#Grid parameters

#Spin temperature T
param22 = -60.0 -69.9 -34.8 0.1 0.1
#param22 = -49.6 -49.6 -49.6 0.1 0.1

#Analytical parameters

#X_CO (0.0 - 1.5 kpc)
#For simplified (3D) bg model this is the total X_CO normalization
param23 = 1.0 0.1 5.0 0.1 0.1
#param23 = 1.0 1.0 1.0 0.1 0.1

#X_CO (1.5 - 3.0 kpc)
#param24 = 1.0 0.1 5.0 0.1 0.1
param24 = 1.0 1.0 1.0 0.1 0.1

#X_CO (3.0 - 50.0 kpc)
#param25 = 1.0 0.1 5.0 0.1 0.1
param25 = 1.0 1.0 1.0 0.1 0.1

#index_e
#param26 = 0.0 -0.3 0.3 0.1 0.1
param26 = 0.0 0.0 0.0 0.1 0.1

#norm_e
#param27 = 1.0 0.1 10.0 0.1 0.1
param27 = 1.0 1.0 1.0 0.1 0.1

#index_p
#param28 = 0.0 -0.3 0.3 0.1 0.1
param28 = 0.0 0.0 0.0 0.1 0.1

#norm_p
param29 = 1.0 0.1 10.0 0.1 0.1
#param29 = 1.0 1.0 1.0 0.1 0.1

#CR_alpha
#param30 = 2.0 1.0 5.0 0 0
param30 = 2.0 2.0 2.0 0.1 0.1

#CR_beta
#param31 = 5.0 3.0 10.0 0 0
param31 = 5.0 5.0 5.0 0.1 0.1

#l
param32 = 0.0 -7.5 7.5 0.1 0.1
#param32 = 7.5 7.5 7.5 0.1 0.1

#b
param33 = 0.0 -7.5 7.5 0.1 0.1
#param33 = 7.5 7.5 7.5 0.1 0.1

#log10(N_0)
param34 = -11.0 -13.2 -9.0 0.1 0.1
#param34 = -12.62 -12.62 -12.62 0.1 0.1

#E_0 in MeV
#param35 = 2000 500 8500 0.1 0.1
param35 = 4016 4016 4016 0.1 0.1

#PS_alpha
#param36 = 2.0 0.0 3.0 0.1 0.1
param36 = 2.2 2.2 2.2 0.1 0.2

#PS_beta
#param37 = 0.5 0.0 1.0 0.1 0.1
param37 = 0. 0. 0. 0.1 0.1

#CS: Lowered this
#Inv_E_c
#param38 = 0.0025 0.0 0.005 0.1 0.1
param38 = 0. 0. 0. 0.1 0.1

#Discrete PS param - adjust range to fit the number of PS found in the last scan
#param39 = 2.0 1.0 3.0 0.1 0.1
param39 = 1.0 1.0 1.0 1.0 1.0
