#Params for "GetPlots" - for processing .txt chain information
#This version: SuperBayeS v1.36 (May 2009)
#See superbayes.org for further details 

###########################################
# Input/Ouptut options, filenames
###########################################

#input file names (.txt and _1 etc added automatically)
#names and position of output variables automatically read in from .info file
file_root = chains/test2_n0_bbtautau_withbadBG/test2_n0_bbtautau_withbadBG

#output file names (if empty, same root as above)
#output files will be gathered in a subdirectory of output_files
out_root = 


#Number of chains to process - if 0 assume there is only one chain and no chain filename suffixes
chain_num = 0
first_chain =
exclude_chain = 

#bins per dimension
num_bins = 50
#number of bins to discard at the boundaries
skip_bin = 0

#For discarding burn-in lines if using raw chains (MCMC only)
#set to 0 for MultiNest scans! 
ignore_rows = 0

#cooling factor (to reduce temperature of chains generated with T>1)
cool = 1

#if non-zero, output _thin file, thinned by thin_factor and with temperature
#reduced by thin_cool
thin_factor = 0
thin_cool = 1

###########################################
# Adjust priors, parameters mapping and CL
###########################################

#Rough importance sampler if you need it (CAREFUL: inference might be imprecise).
#Write your own AdjustPriors routine in mcsamples.f90 
adjust_priors = F

#Map parameters to other derived quantities - might also add new derived quantities if add_columns > 0
#write MapParams routine to suit your needs in mcsamples.f90
map_params = T

#CL contours for all statistics 
contour1 = 0.68
contour2 = 0.95

###########################################
# Add derived variables 
###########################################

#Add here N columns for derived variables - write the mapping in the AddParams routine in mcsamples.f90
#you need to give explicit labels for added params below
add_columns = 0

#labels for added quantities - their number must match add_columns
#labA1 =  R(A1,Q)
#labA2 =  R(A1,T)

###########################################
# Plots variables
###########################################


#Which parameters to plot (refer to .info file for the correspondence
#between variables and numbers). 

#If zero uses *all* parameters present in the info file plus all params added below (labA=...)

#Syntax: 
#Ax indicates Added variable x (where x =1,2,...,add_columns)
#simply x indicates one of the original variables in the chain (as per .info file)
#if numbers do not match, simply ignored


#E.g., dm parameters 
plotparams_num = 8
plotparams = 1 2 3 7 8 9 10 20

#1D plotting options
plot_1D_pdf = T
plot_1D_meanlike = F
plot_1D_meanchisq = F
plot_1D_profile = T
plot_1D_likelihood = F

#Use a Gaussian smoothing with width of the bin size for T
#Profile likelihood is NEVER smoothed 
#Applies to both 1D and 2D plots 
#if F use top hat bins (i.e. no smoothing)
smoothing = F

###########################################
# 2D Plots 
###########################################

#if you only want 2D plots agains a particular variable
plot_2D_param = 0

#if above zero, instead plot just the combinations given explicitely below
#if both zero it will plot most correlated variables

#Syntax as above, Ax indicates an added variable
#The first number indicates the x-axis variable, the second the y-axis

plot_2D_num = 3

#E.g.: DM parameters 
plot1 = 1 2
plot2 = 2 3
plot3 = 1 3
#plot4 = 7 8 
#plot5 = 10 20

#Whether to do all of the 2D combinations (Warning: this can be very slow - 1000's of plots!)
all_2D_plots = F


#2D plotting options
#customize colourmaps, labels size etc in matlab.f90 (hardcoded)
plot_contours = T
plot_mean = T
plot_bestfit = T
#do you want to plot a reference point? specify its coordinates in DefineRefPoint (mcsamples.f90)
plot_reference = T
#if you want 2D plots on the same .ps file (T) or in separate .ps files (F)
plot_together = T
#colorbar on/off on 2D plots
colorbar_on = T

###########################################
# 3D Plots 
###########################################

#Number of single samples plots, colored by third parameter
num_3D_plots = 0

#List of plots
#E.g: m0 - m12 plane coloured by value of Omega_CDM h2 
3D_plot1 = 2 1 10

#whether or not to produce single sample file (used in 3D plots)
#Automatically set to T if num_3D_plots>0
do_3D_plots = T
single_thin = 
#3D plotting options
#This sets the min/max limits for the range in the colour axis
#caxis_min = 0
#caxis_max = 5
#put here the name of the colormap you want to use. see colormaps/ directory
#if empty, uses default jet colormap
colormap_name =

#if non-empty, output .ps files use this rootname rather than the chain rootname
#plot_3D_psname = output_filename


###########################################
# Limits handling, plots ranges 
###########################################

#If F the .margestats file contains two tails limits (Bayesian pdf) if no limitsX is found
#Otherwise 1 tail limits are enforeced 
#If T always gives 2 tail limits 
force_twotail = F

#Enforce limits for corresponding variable 
#the limitsxxx below only used to cut max/min range of bins
#Samples above/below the range are mapped in the last/first bin
#(this is different from standard GetDist!)
#E.g.: syntax for .info file variables
#limits10=0.0 0.2
#limits16=0.0 8.0

#Syntax for added variables 
#limitsA1= 0.8 1.2
#limitsA2= 0.8 1.2

#Ranges purely for plotting purposes, i.e. if present this sets the range of the axis 
#in SM and Matlab (does not influence the stats analysis)
#E.g. for CMSSM params:
plot_limits4=-1 0
#plot_limits2=0 2
#plot_limits3=-4 4
#plot_limits4=2 62

###########################################
# Covariance matrix dimension
###########################################
#Number of parameters to get covariance matrix for 
#If you are going to use the output as a proposal density make sure
#you have map_params = F, and the dimension equal to the number of MCMC parameters
#i.e., that must be the number num_params of the run
cov_matrix_dimension = 9
